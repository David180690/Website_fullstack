version: '3.3'

services:
  server:
    build:
      context: ../  # Point to the root of the project (assuming the Dockerfile is in the backend folder)
      dockerfile: backend/Dockerfile  # Specify the location of the Dockerfile inside the backend folder
    command: ["node", "server.js"]
    ports:
      - "5000:5000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/WEB_DEMO  # MongoDB connection URI (inside Docker)
    networks:
      - shared_network
    depends_on:
      - mongo  # Ensure MongoDB starts before the server

  upload:
    build:
      context: ../  # Point to the root of the project (assuming the Dockerfile is in the backend folder)
      dockerfile: backend/Dockerfile  # Specify the location of the Dockerfile inside the backend folder
    command: ["node", "upload.js"]
    ports:
      - "5001:5001"
    environment:
      - MONGO_URI=mongodb://mongo:27017/WEB_DEMO  # MongoDB connection URI (inside Docker)
    networks:
      - shared_network
    depends_on:
      - mongo  # Ensure MongoDB starts before upload service

  mongo:
    image: mongo:latest  # Use the official MongoDB image
    container_name: mongo
    ports:
      - "27018:27017"  # Map container port 27017 to host port 27018
    environment:
      - MONGO_INITDB_DATABASE=WEB_DEMO  # Specify the database name
    volumes:
      - mongo_data:/data/db  # Persist MongoDB data across container restarts
    networks:
      - shared_network

networks:
  shared_network:
    driver: bridge

volumes:
  mongo_data:  # Define a volume for MongoDB data
